--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=26 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 20.1 cbx_cycloneii 2020:11:11:17:06:45:SJ cbx_lpm_add_sub 2020:11:11:17:06:45:SJ cbx_lpm_compare 2020:11:11:17:06:45:SJ cbx_lpm_decode 2020:11:11:17:06:45:SJ cbx_mgl 2020:11:11:17:08:38:SJ cbx_nadder 2020:11:11:17:06:46:SJ cbx_stratix 2020:11:11:17:06:46:SJ cbx_stratixii 2020:11:11:17:06:46:SJ  VERSION_END


-- Copyright (C) 2020  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 36 
SUBDESIGN decode_vma
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[25..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[25..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode3407w[2..0]	: WIRE;
	w_anode3420w[3..0]	: WIRE;
	w_anode3437w[3..0]	: WIRE;
	w_anode3447w[3..0]	: WIRE;
	w_anode3457w[3..0]	: WIRE;
	w_anode3467w[3..0]	: WIRE;
	w_anode3477w[3..0]	: WIRE;
	w_anode3487w[3..0]	: WIRE;
	w_anode3497w[3..0]	: WIRE;
	w_anode3509w[2..0]	: WIRE;
	w_anode3518w[3..0]	: WIRE;
	w_anode3529w[3..0]	: WIRE;
	w_anode3539w[3..0]	: WIRE;
	w_anode3549w[3..0]	: WIRE;
	w_anode3559w[3..0]	: WIRE;
	w_anode3569w[3..0]	: WIRE;
	w_anode3579w[3..0]	: WIRE;
	w_anode3589w[3..0]	: WIRE;
	w_anode3600w[2..0]	: WIRE;
	w_anode3609w[3..0]	: WIRE;
	w_anode3620w[3..0]	: WIRE;
	w_anode3630w[3..0]	: WIRE;
	w_anode3640w[3..0]	: WIRE;
	w_anode3650w[3..0]	: WIRE;
	w_anode3660w[3..0]	: WIRE;
	w_anode3670w[3..0]	: WIRE;
	w_anode3680w[3..0]	: WIRE;
	w_anode3691w[2..0]	: WIRE;
	w_anode3700w[3..0]	: WIRE;
	w_anode3711w[3..0]	: WIRE;
	w_anode3721w[3..0]	: WIRE;
	w_anode3731w[3..0]	: WIRE;
	w_anode3741w[3..0]	: WIRE;
	w_anode3751w[3..0]	: WIRE;
	w_anode3761w[3..0]	: WIRE;
	w_anode3771w[3..0]	: WIRE;
	w_data3405w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[25..0] = eq_wire[25..0];
	eq_wire[] = ( ( w_anode3771w[3..3], w_anode3761w[3..3], w_anode3751w[3..3], w_anode3741w[3..3], w_anode3731w[3..3], w_anode3721w[3..3], w_anode3711w[3..3], w_anode3700w[3..3]), ( w_anode3680w[3..3], w_anode3670w[3..3], w_anode3660w[3..3], w_anode3650w[3..3], w_anode3640w[3..3], w_anode3630w[3..3], w_anode3620w[3..3], w_anode3609w[3..3]), ( w_anode3589w[3..3], w_anode3579w[3..3], w_anode3569w[3..3], w_anode3559w[3..3], w_anode3549w[3..3], w_anode3539w[3..3], w_anode3529w[3..3], w_anode3518w[3..3]), ( w_anode3497w[3..3], w_anode3487w[3..3], w_anode3477w[3..3], w_anode3467w[3..3], w_anode3457w[3..3], w_anode3447w[3..3], w_anode3437w[3..3], w_anode3420w[3..3]));
	w_anode3407w[] = ( (w_anode3407w[1..1] & (! data_wire[4..4])), (w_anode3407w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3420w[] = ( (w_anode3420w[2..2] & (! w_data3405w[2..2])), (w_anode3420w[1..1] & (! w_data3405w[1..1])), (w_anode3420w[0..0] & (! w_data3405w[0..0])), w_anode3407w[2..2]);
	w_anode3437w[] = ( (w_anode3437w[2..2] & (! w_data3405w[2..2])), (w_anode3437w[1..1] & (! w_data3405w[1..1])), (w_anode3437w[0..0] & w_data3405w[0..0]), w_anode3407w[2..2]);
	w_anode3447w[] = ( (w_anode3447w[2..2] & (! w_data3405w[2..2])), (w_anode3447w[1..1] & w_data3405w[1..1]), (w_anode3447w[0..0] & (! w_data3405w[0..0])), w_anode3407w[2..2]);
	w_anode3457w[] = ( (w_anode3457w[2..2] & (! w_data3405w[2..2])), (w_anode3457w[1..1] & w_data3405w[1..1]), (w_anode3457w[0..0] & w_data3405w[0..0]), w_anode3407w[2..2]);
	w_anode3467w[] = ( (w_anode3467w[2..2] & w_data3405w[2..2]), (w_anode3467w[1..1] & (! w_data3405w[1..1])), (w_anode3467w[0..0] & (! w_data3405w[0..0])), w_anode3407w[2..2]);
	w_anode3477w[] = ( (w_anode3477w[2..2] & w_data3405w[2..2]), (w_anode3477w[1..1] & (! w_data3405w[1..1])), (w_anode3477w[0..0] & w_data3405w[0..0]), w_anode3407w[2..2]);
	w_anode3487w[] = ( (w_anode3487w[2..2] & w_data3405w[2..2]), (w_anode3487w[1..1] & w_data3405w[1..1]), (w_anode3487w[0..0] & (! w_data3405w[0..0])), w_anode3407w[2..2]);
	w_anode3497w[] = ( (w_anode3497w[2..2] & w_data3405w[2..2]), (w_anode3497w[1..1] & w_data3405w[1..1]), (w_anode3497w[0..0] & w_data3405w[0..0]), w_anode3407w[2..2]);
	w_anode3509w[] = ( (w_anode3509w[1..1] & (! data_wire[4..4])), (w_anode3509w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3518w[] = ( (w_anode3518w[2..2] & (! w_data3405w[2..2])), (w_anode3518w[1..1] & (! w_data3405w[1..1])), (w_anode3518w[0..0] & (! w_data3405w[0..0])), w_anode3509w[2..2]);
	w_anode3529w[] = ( (w_anode3529w[2..2] & (! w_data3405w[2..2])), (w_anode3529w[1..1] & (! w_data3405w[1..1])), (w_anode3529w[0..0] & w_data3405w[0..0]), w_anode3509w[2..2]);
	w_anode3539w[] = ( (w_anode3539w[2..2] & (! w_data3405w[2..2])), (w_anode3539w[1..1] & w_data3405w[1..1]), (w_anode3539w[0..0] & (! w_data3405w[0..0])), w_anode3509w[2..2]);
	w_anode3549w[] = ( (w_anode3549w[2..2] & (! w_data3405w[2..2])), (w_anode3549w[1..1] & w_data3405w[1..1]), (w_anode3549w[0..0] & w_data3405w[0..0]), w_anode3509w[2..2]);
	w_anode3559w[] = ( (w_anode3559w[2..2] & w_data3405w[2..2]), (w_anode3559w[1..1] & (! w_data3405w[1..1])), (w_anode3559w[0..0] & (! w_data3405w[0..0])), w_anode3509w[2..2]);
	w_anode3569w[] = ( (w_anode3569w[2..2] & w_data3405w[2..2]), (w_anode3569w[1..1] & (! w_data3405w[1..1])), (w_anode3569w[0..0] & w_data3405w[0..0]), w_anode3509w[2..2]);
	w_anode3579w[] = ( (w_anode3579w[2..2] & w_data3405w[2..2]), (w_anode3579w[1..1] & w_data3405w[1..1]), (w_anode3579w[0..0] & (! w_data3405w[0..0])), w_anode3509w[2..2]);
	w_anode3589w[] = ( (w_anode3589w[2..2] & w_data3405w[2..2]), (w_anode3589w[1..1] & w_data3405w[1..1]), (w_anode3589w[0..0] & w_data3405w[0..0]), w_anode3509w[2..2]);
	w_anode3600w[] = ( (w_anode3600w[1..1] & data_wire[4..4]), (w_anode3600w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3609w[] = ( (w_anode3609w[2..2] & (! w_data3405w[2..2])), (w_anode3609w[1..1] & (! w_data3405w[1..1])), (w_anode3609w[0..0] & (! w_data3405w[0..0])), w_anode3600w[2..2]);
	w_anode3620w[] = ( (w_anode3620w[2..2] & (! w_data3405w[2..2])), (w_anode3620w[1..1] & (! w_data3405w[1..1])), (w_anode3620w[0..0] & w_data3405w[0..0]), w_anode3600w[2..2]);
	w_anode3630w[] = ( (w_anode3630w[2..2] & (! w_data3405w[2..2])), (w_anode3630w[1..1] & w_data3405w[1..1]), (w_anode3630w[0..0] & (! w_data3405w[0..0])), w_anode3600w[2..2]);
	w_anode3640w[] = ( (w_anode3640w[2..2] & (! w_data3405w[2..2])), (w_anode3640w[1..1] & w_data3405w[1..1]), (w_anode3640w[0..0] & w_data3405w[0..0]), w_anode3600w[2..2]);
	w_anode3650w[] = ( (w_anode3650w[2..2] & w_data3405w[2..2]), (w_anode3650w[1..1] & (! w_data3405w[1..1])), (w_anode3650w[0..0] & (! w_data3405w[0..0])), w_anode3600w[2..2]);
	w_anode3660w[] = ( (w_anode3660w[2..2] & w_data3405w[2..2]), (w_anode3660w[1..1] & (! w_data3405w[1..1])), (w_anode3660w[0..0] & w_data3405w[0..0]), w_anode3600w[2..2]);
	w_anode3670w[] = ( (w_anode3670w[2..2] & w_data3405w[2..2]), (w_anode3670w[1..1] & w_data3405w[1..1]), (w_anode3670w[0..0] & (! w_data3405w[0..0])), w_anode3600w[2..2]);
	w_anode3680w[] = ( (w_anode3680w[2..2] & w_data3405w[2..2]), (w_anode3680w[1..1] & w_data3405w[1..1]), (w_anode3680w[0..0] & w_data3405w[0..0]), w_anode3600w[2..2]);
	w_anode3691w[] = ( (w_anode3691w[1..1] & data_wire[4..4]), (w_anode3691w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3700w[] = ( (w_anode3700w[2..2] & (! w_data3405w[2..2])), (w_anode3700w[1..1] & (! w_data3405w[1..1])), (w_anode3700w[0..0] & (! w_data3405w[0..0])), w_anode3691w[2..2]);
	w_anode3711w[] = ( (w_anode3711w[2..2] & (! w_data3405w[2..2])), (w_anode3711w[1..1] & (! w_data3405w[1..1])), (w_anode3711w[0..0] & w_data3405w[0..0]), w_anode3691w[2..2]);
	w_anode3721w[] = ( (w_anode3721w[2..2] & (! w_data3405w[2..2])), (w_anode3721w[1..1] & w_data3405w[1..1]), (w_anode3721w[0..0] & (! w_data3405w[0..0])), w_anode3691w[2..2]);
	w_anode3731w[] = ( (w_anode3731w[2..2] & (! w_data3405w[2..2])), (w_anode3731w[1..1] & w_data3405w[1..1]), (w_anode3731w[0..0] & w_data3405w[0..0]), w_anode3691w[2..2]);
	w_anode3741w[] = ( (w_anode3741w[2..2] & w_data3405w[2..2]), (w_anode3741w[1..1] & (! w_data3405w[1..1])), (w_anode3741w[0..0] & (! w_data3405w[0..0])), w_anode3691w[2..2]);
	w_anode3751w[] = ( (w_anode3751w[2..2] & w_data3405w[2..2]), (w_anode3751w[1..1] & (! w_data3405w[1..1])), (w_anode3751w[0..0] & w_data3405w[0..0]), w_anode3691w[2..2]);
	w_anode3761w[] = ( (w_anode3761w[2..2] & w_data3405w[2..2]), (w_anode3761w[1..1] & w_data3405w[1..1]), (w_anode3761w[0..0] & (! w_data3405w[0..0])), w_anode3691w[2..2]);
	w_anode3771w[] = ( (w_anode3771w[2..2] & w_data3405w[2..2]), (w_anode3771w[1..1] & w_data3405w[1..1]), (w_anode3771w[0..0] & w_data3405w[0..0]), w_anode3691w[2..2]);
	w_data3405w[2..0] = data_wire[2..0];
END;
--VALID FILE
