--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=24 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 20.1 cbx_cycloneii 2020:11:11:17:06:45:SJ cbx_lpm_add_sub 2020:11:11:17:06:45:SJ cbx_lpm_compare 2020:11:11:17:06:45:SJ cbx_lpm_decode 2020:11:11:17:06:45:SJ cbx_mgl 2020:11:11:17:08:38:SJ cbx_nadder 2020:11:11:17:06:46:SJ cbx_stratix 2020:11:11:17:06:46:SJ cbx_stratixii 2020:11:11:17:06:46:SJ  VERSION_END


-- Copyright (C) 2020  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 36 
SUBDESIGN decode_uma
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[23..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[23..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode3147w[2..0]	: WIRE;
	w_anode3160w[3..0]	: WIRE;
	w_anode3177w[3..0]	: WIRE;
	w_anode3187w[3..0]	: WIRE;
	w_anode3197w[3..0]	: WIRE;
	w_anode3207w[3..0]	: WIRE;
	w_anode3217w[3..0]	: WIRE;
	w_anode3227w[3..0]	: WIRE;
	w_anode3237w[3..0]	: WIRE;
	w_anode3249w[2..0]	: WIRE;
	w_anode3258w[3..0]	: WIRE;
	w_anode3269w[3..0]	: WIRE;
	w_anode3279w[3..0]	: WIRE;
	w_anode3289w[3..0]	: WIRE;
	w_anode3299w[3..0]	: WIRE;
	w_anode3309w[3..0]	: WIRE;
	w_anode3319w[3..0]	: WIRE;
	w_anode3329w[3..0]	: WIRE;
	w_anode3340w[2..0]	: WIRE;
	w_anode3349w[3..0]	: WIRE;
	w_anode3360w[3..0]	: WIRE;
	w_anode3370w[3..0]	: WIRE;
	w_anode3380w[3..0]	: WIRE;
	w_anode3390w[3..0]	: WIRE;
	w_anode3400w[3..0]	: WIRE;
	w_anode3410w[3..0]	: WIRE;
	w_anode3420w[3..0]	: WIRE;
	w_anode3431w[2..0]	: WIRE;
	w_anode3440w[3..0]	: WIRE;
	w_anode3451w[3..0]	: WIRE;
	w_anode3461w[3..0]	: WIRE;
	w_anode3471w[3..0]	: WIRE;
	w_anode3481w[3..0]	: WIRE;
	w_anode3491w[3..0]	: WIRE;
	w_anode3501w[3..0]	: WIRE;
	w_anode3511w[3..0]	: WIRE;
	w_data3145w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[23..0] = eq_wire[23..0];
	eq_wire[] = ( ( w_anode3511w[3..3], w_anode3501w[3..3], w_anode3491w[3..3], w_anode3481w[3..3], w_anode3471w[3..3], w_anode3461w[3..3], w_anode3451w[3..3], w_anode3440w[3..3]), ( w_anode3420w[3..3], w_anode3410w[3..3], w_anode3400w[3..3], w_anode3390w[3..3], w_anode3380w[3..3], w_anode3370w[3..3], w_anode3360w[3..3], w_anode3349w[3..3]), ( w_anode3329w[3..3], w_anode3319w[3..3], w_anode3309w[3..3], w_anode3299w[3..3], w_anode3289w[3..3], w_anode3279w[3..3], w_anode3269w[3..3], w_anode3258w[3..3]), ( w_anode3237w[3..3], w_anode3227w[3..3], w_anode3217w[3..3], w_anode3207w[3..3], w_anode3197w[3..3], w_anode3187w[3..3], w_anode3177w[3..3], w_anode3160w[3..3]));
	w_anode3147w[] = ( (w_anode3147w[1..1] & (! data_wire[4..4])), (w_anode3147w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3160w[] = ( (w_anode3160w[2..2] & (! w_data3145w[2..2])), (w_anode3160w[1..1] & (! w_data3145w[1..1])), (w_anode3160w[0..0] & (! w_data3145w[0..0])), w_anode3147w[2..2]);
	w_anode3177w[] = ( (w_anode3177w[2..2] & (! w_data3145w[2..2])), (w_anode3177w[1..1] & (! w_data3145w[1..1])), (w_anode3177w[0..0] & w_data3145w[0..0]), w_anode3147w[2..2]);
	w_anode3187w[] = ( (w_anode3187w[2..2] & (! w_data3145w[2..2])), (w_anode3187w[1..1] & w_data3145w[1..1]), (w_anode3187w[0..0] & (! w_data3145w[0..0])), w_anode3147w[2..2]);
	w_anode3197w[] = ( (w_anode3197w[2..2] & (! w_data3145w[2..2])), (w_anode3197w[1..1] & w_data3145w[1..1]), (w_anode3197w[0..0] & w_data3145w[0..0]), w_anode3147w[2..2]);
	w_anode3207w[] = ( (w_anode3207w[2..2] & w_data3145w[2..2]), (w_anode3207w[1..1] & (! w_data3145w[1..1])), (w_anode3207w[0..0] & (! w_data3145w[0..0])), w_anode3147w[2..2]);
	w_anode3217w[] = ( (w_anode3217w[2..2] & w_data3145w[2..2]), (w_anode3217w[1..1] & (! w_data3145w[1..1])), (w_anode3217w[0..0] & w_data3145w[0..0]), w_anode3147w[2..2]);
	w_anode3227w[] = ( (w_anode3227w[2..2] & w_data3145w[2..2]), (w_anode3227w[1..1] & w_data3145w[1..1]), (w_anode3227w[0..0] & (! w_data3145w[0..0])), w_anode3147w[2..2]);
	w_anode3237w[] = ( (w_anode3237w[2..2] & w_data3145w[2..2]), (w_anode3237w[1..1] & w_data3145w[1..1]), (w_anode3237w[0..0] & w_data3145w[0..0]), w_anode3147w[2..2]);
	w_anode3249w[] = ( (w_anode3249w[1..1] & (! data_wire[4..4])), (w_anode3249w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3258w[] = ( (w_anode3258w[2..2] & (! w_data3145w[2..2])), (w_anode3258w[1..1] & (! w_data3145w[1..1])), (w_anode3258w[0..0] & (! w_data3145w[0..0])), w_anode3249w[2..2]);
	w_anode3269w[] = ( (w_anode3269w[2..2] & (! w_data3145w[2..2])), (w_anode3269w[1..1] & (! w_data3145w[1..1])), (w_anode3269w[0..0] & w_data3145w[0..0]), w_anode3249w[2..2]);
	w_anode3279w[] = ( (w_anode3279w[2..2] & (! w_data3145w[2..2])), (w_anode3279w[1..1] & w_data3145w[1..1]), (w_anode3279w[0..0] & (! w_data3145w[0..0])), w_anode3249w[2..2]);
	w_anode3289w[] = ( (w_anode3289w[2..2] & (! w_data3145w[2..2])), (w_anode3289w[1..1] & w_data3145w[1..1]), (w_anode3289w[0..0] & w_data3145w[0..0]), w_anode3249w[2..2]);
	w_anode3299w[] = ( (w_anode3299w[2..2] & w_data3145w[2..2]), (w_anode3299w[1..1] & (! w_data3145w[1..1])), (w_anode3299w[0..0] & (! w_data3145w[0..0])), w_anode3249w[2..2]);
	w_anode3309w[] = ( (w_anode3309w[2..2] & w_data3145w[2..2]), (w_anode3309w[1..1] & (! w_data3145w[1..1])), (w_anode3309w[0..0] & w_data3145w[0..0]), w_anode3249w[2..2]);
	w_anode3319w[] = ( (w_anode3319w[2..2] & w_data3145w[2..2]), (w_anode3319w[1..1] & w_data3145w[1..1]), (w_anode3319w[0..0] & (! w_data3145w[0..0])), w_anode3249w[2..2]);
	w_anode3329w[] = ( (w_anode3329w[2..2] & w_data3145w[2..2]), (w_anode3329w[1..1] & w_data3145w[1..1]), (w_anode3329w[0..0] & w_data3145w[0..0]), w_anode3249w[2..2]);
	w_anode3340w[] = ( (w_anode3340w[1..1] & data_wire[4..4]), (w_anode3340w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3349w[] = ( (w_anode3349w[2..2] & (! w_data3145w[2..2])), (w_anode3349w[1..1] & (! w_data3145w[1..1])), (w_anode3349w[0..0] & (! w_data3145w[0..0])), w_anode3340w[2..2]);
	w_anode3360w[] = ( (w_anode3360w[2..2] & (! w_data3145w[2..2])), (w_anode3360w[1..1] & (! w_data3145w[1..1])), (w_anode3360w[0..0] & w_data3145w[0..0]), w_anode3340w[2..2]);
	w_anode3370w[] = ( (w_anode3370w[2..2] & (! w_data3145w[2..2])), (w_anode3370w[1..1] & w_data3145w[1..1]), (w_anode3370w[0..0] & (! w_data3145w[0..0])), w_anode3340w[2..2]);
	w_anode3380w[] = ( (w_anode3380w[2..2] & (! w_data3145w[2..2])), (w_anode3380w[1..1] & w_data3145w[1..1]), (w_anode3380w[0..0] & w_data3145w[0..0]), w_anode3340w[2..2]);
	w_anode3390w[] = ( (w_anode3390w[2..2] & w_data3145w[2..2]), (w_anode3390w[1..1] & (! w_data3145w[1..1])), (w_anode3390w[0..0] & (! w_data3145w[0..0])), w_anode3340w[2..2]);
	w_anode3400w[] = ( (w_anode3400w[2..2] & w_data3145w[2..2]), (w_anode3400w[1..1] & (! w_data3145w[1..1])), (w_anode3400w[0..0] & w_data3145w[0..0]), w_anode3340w[2..2]);
	w_anode3410w[] = ( (w_anode3410w[2..2] & w_data3145w[2..2]), (w_anode3410w[1..1] & w_data3145w[1..1]), (w_anode3410w[0..0] & (! w_data3145w[0..0])), w_anode3340w[2..2]);
	w_anode3420w[] = ( (w_anode3420w[2..2] & w_data3145w[2..2]), (w_anode3420w[1..1] & w_data3145w[1..1]), (w_anode3420w[0..0] & w_data3145w[0..0]), w_anode3340w[2..2]);
	w_anode3431w[] = ( (w_anode3431w[1..1] & data_wire[4..4]), (w_anode3431w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3440w[] = ( (w_anode3440w[2..2] & (! w_data3145w[2..2])), (w_anode3440w[1..1] & (! w_data3145w[1..1])), (w_anode3440w[0..0] & (! w_data3145w[0..0])), w_anode3431w[2..2]);
	w_anode3451w[] = ( (w_anode3451w[2..2] & (! w_data3145w[2..2])), (w_anode3451w[1..1] & (! w_data3145w[1..1])), (w_anode3451w[0..0] & w_data3145w[0..0]), w_anode3431w[2..2]);
	w_anode3461w[] = ( (w_anode3461w[2..2] & (! w_data3145w[2..2])), (w_anode3461w[1..1] & w_data3145w[1..1]), (w_anode3461w[0..0] & (! w_data3145w[0..0])), w_anode3431w[2..2]);
	w_anode3471w[] = ( (w_anode3471w[2..2] & (! w_data3145w[2..2])), (w_anode3471w[1..1] & w_data3145w[1..1]), (w_anode3471w[0..0] & w_data3145w[0..0]), w_anode3431w[2..2]);
	w_anode3481w[] = ( (w_anode3481w[2..2] & w_data3145w[2..2]), (w_anode3481w[1..1] & (! w_data3145w[1..1])), (w_anode3481w[0..0] & (! w_data3145w[0..0])), w_anode3431w[2..2]);
	w_anode3491w[] = ( (w_anode3491w[2..2] & w_data3145w[2..2]), (w_anode3491w[1..1] & (! w_data3145w[1..1])), (w_anode3491w[0..0] & w_data3145w[0..0]), w_anode3431w[2..2]);
	w_anode3501w[] = ( (w_anode3501w[2..2] & w_data3145w[2..2]), (w_anode3501w[1..1] & w_data3145w[1..1]), (w_anode3501w[0..0] & (! w_data3145w[0..0])), w_anode3431w[2..2]);
	w_anode3511w[] = ( (w_anode3511w[2..2] & w_data3145w[2..2]), (w_anode3511w[1..1] & w_data3145w[1..1]), (w_anode3511w[0..0] & w_data3145w[0..0]), w_anode3431w[2..2]);
	w_data3145w[2..0] = data_wire[2..0];
END;
--VALID FILE
