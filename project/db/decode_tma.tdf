--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=23 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 20.1 cbx_cycloneii 2020:11:11:17:06:45:SJ cbx_lpm_add_sub 2020:11:11:17:06:45:SJ cbx_lpm_compare 2020:11:11:17:06:45:SJ cbx_lpm_decode 2020:11:11:17:06:45:SJ cbx_mgl 2020:11:11:17:08:38:SJ cbx_nadder 2020:11:11:17:06:46:SJ cbx_stratix 2020:11:11:17:06:46:SJ cbx_stratixii 2020:11:11:17:06:46:SJ  VERSION_END


-- Copyright (C) 2020  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 36 
SUBDESIGN decode_tma
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[22..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[22..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode3018w[2..0]	: WIRE;
	w_anode3031w[3..0]	: WIRE;
	w_anode3048w[3..0]	: WIRE;
	w_anode3058w[3..0]	: WIRE;
	w_anode3068w[3..0]	: WIRE;
	w_anode3078w[3..0]	: WIRE;
	w_anode3088w[3..0]	: WIRE;
	w_anode3098w[3..0]	: WIRE;
	w_anode3108w[3..0]	: WIRE;
	w_anode3120w[2..0]	: WIRE;
	w_anode3129w[3..0]	: WIRE;
	w_anode3140w[3..0]	: WIRE;
	w_anode3150w[3..0]	: WIRE;
	w_anode3160w[3..0]	: WIRE;
	w_anode3170w[3..0]	: WIRE;
	w_anode3180w[3..0]	: WIRE;
	w_anode3190w[3..0]	: WIRE;
	w_anode3200w[3..0]	: WIRE;
	w_anode3211w[2..0]	: WIRE;
	w_anode3220w[3..0]	: WIRE;
	w_anode3231w[3..0]	: WIRE;
	w_anode3241w[3..0]	: WIRE;
	w_anode3251w[3..0]	: WIRE;
	w_anode3261w[3..0]	: WIRE;
	w_anode3271w[3..0]	: WIRE;
	w_anode3281w[3..0]	: WIRE;
	w_anode3291w[3..0]	: WIRE;
	w_anode3302w[2..0]	: WIRE;
	w_anode3311w[3..0]	: WIRE;
	w_anode3322w[3..0]	: WIRE;
	w_anode3332w[3..0]	: WIRE;
	w_anode3342w[3..0]	: WIRE;
	w_anode3352w[3..0]	: WIRE;
	w_anode3362w[3..0]	: WIRE;
	w_anode3372w[3..0]	: WIRE;
	w_anode3382w[3..0]	: WIRE;
	w_data3016w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[22..0] = eq_wire[22..0];
	eq_wire[] = ( ( w_anode3382w[3..3], w_anode3372w[3..3], w_anode3362w[3..3], w_anode3352w[3..3], w_anode3342w[3..3], w_anode3332w[3..3], w_anode3322w[3..3], w_anode3311w[3..3]), ( w_anode3291w[3..3], w_anode3281w[3..3], w_anode3271w[3..3], w_anode3261w[3..3], w_anode3251w[3..3], w_anode3241w[3..3], w_anode3231w[3..3], w_anode3220w[3..3]), ( w_anode3200w[3..3], w_anode3190w[3..3], w_anode3180w[3..3], w_anode3170w[3..3], w_anode3160w[3..3], w_anode3150w[3..3], w_anode3140w[3..3], w_anode3129w[3..3]), ( w_anode3108w[3..3], w_anode3098w[3..3], w_anode3088w[3..3], w_anode3078w[3..3], w_anode3068w[3..3], w_anode3058w[3..3], w_anode3048w[3..3], w_anode3031w[3..3]));
	w_anode3018w[] = ( (w_anode3018w[1..1] & (! data_wire[4..4])), (w_anode3018w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3031w[] = ( (w_anode3031w[2..2] & (! w_data3016w[2..2])), (w_anode3031w[1..1] & (! w_data3016w[1..1])), (w_anode3031w[0..0] & (! w_data3016w[0..0])), w_anode3018w[2..2]);
	w_anode3048w[] = ( (w_anode3048w[2..2] & (! w_data3016w[2..2])), (w_anode3048w[1..1] & (! w_data3016w[1..1])), (w_anode3048w[0..0] & w_data3016w[0..0]), w_anode3018w[2..2]);
	w_anode3058w[] = ( (w_anode3058w[2..2] & (! w_data3016w[2..2])), (w_anode3058w[1..1] & w_data3016w[1..1]), (w_anode3058w[0..0] & (! w_data3016w[0..0])), w_anode3018w[2..2]);
	w_anode3068w[] = ( (w_anode3068w[2..2] & (! w_data3016w[2..2])), (w_anode3068w[1..1] & w_data3016w[1..1]), (w_anode3068w[0..0] & w_data3016w[0..0]), w_anode3018w[2..2]);
	w_anode3078w[] = ( (w_anode3078w[2..2] & w_data3016w[2..2]), (w_anode3078w[1..1] & (! w_data3016w[1..1])), (w_anode3078w[0..0] & (! w_data3016w[0..0])), w_anode3018w[2..2]);
	w_anode3088w[] = ( (w_anode3088w[2..2] & w_data3016w[2..2]), (w_anode3088w[1..1] & (! w_data3016w[1..1])), (w_anode3088w[0..0] & w_data3016w[0..0]), w_anode3018w[2..2]);
	w_anode3098w[] = ( (w_anode3098w[2..2] & w_data3016w[2..2]), (w_anode3098w[1..1] & w_data3016w[1..1]), (w_anode3098w[0..0] & (! w_data3016w[0..0])), w_anode3018w[2..2]);
	w_anode3108w[] = ( (w_anode3108w[2..2] & w_data3016w[2..2]), (w_anode3108w[1..1] & w_data3016w[1..1]), (w_anode3108w[0..0] & w_data3016w[0..0]), w_anode3018w[2..2]);
	w_anode3120w[] = ( (w_anode3120w[1..1] & (! data_wire[4..4])), (w_anode3120w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3129w[] = ( (w_anode3129w[2..2] & (! w_data3016w[2..2])), (w_anode3129w[1..1] & (! w_data3016w[1..1])), (w_anode3129w[0..0] & (! w_data3016w[0..0])), w_anode3120w[2..2]);
	w_anode3140w[] = ( (w_anode3140w[2..2] & (! w_data3016w[2..2])), (w_anode3140w[1..1] & (! w_data3016w[1..1])), (w_anode3140w[0..0] & w_data3016w[0..0]), w_anode3120w[2..2]);
	w_anode3150w[] = ( (w_anode3150w[2..2] & (! w_data3016w[2..2])), (w_anode3150w[1..1] & w_data3016w[1..1]), (w_anode3150w[0..0] & (! w_data3016w[0..0])), w_anode3120w[2..2]);
	w_anode3160w[] = ( (w_anode3160w[2..2] & (! w_data3016w[2..2])), (w_anode3160w[1..1] & w_data3016w[1..1]), (w_anode3160w[0..0] & w_data3016w[0..0]), w_anode3120w[2..2]);
	w_anode3170w[] = ( (w_anode3170w[2..2] & w_data3016w[2..2]), (w_anode3170w[1..1] & (! w_data3016w[1..1])), (w_anode3170w[0..0] & (! w_data3016w[0..0])), w_anode3120w[2..2]);
	w_anode3180w[] = ( (w_anode3180w[2..2] & w_data3016w[2..2]), (w_anode3180w[1..1] & (! w_data3016w[1..1])), (w_anode3180w[0..0] & w_data3016w[0..0]), w_anode3120w[2..2]);
	w_anode3190w[] = ( (w_anode3190w[2..2] & w_data3016w[2..2]), (w_anode3190w[1..1] & w_data3016w[1..1]), (w_anode3190w[0..0] & (! w_data3016w[0..0])), w_anode3120w[2..2]);
	w_anode3200w[] = ( (w_anode3200w[2..2] & w_data3016w[2..2]), (w_anode3200w[1..1] & w_data3016w[1..1]), (w_anode3200w[0..0] & w_data3016w[0..0]), w_anode3120w[2..2]);
	w_anode3211w[] = ( (w_anode3211w[1..1] & data_wire[4..4]), (w_anode3211w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3220w[] = ( (w_anode3220w[2..2] & (! w_data3016w[2..2])), (w_anode3220w[1..1] & (! w_data3016w[1..1])), (w_anode3220w[0..0] & (! w_data3016w[0..0])), w_anode3211w[2..2]);
	w_anode3231w[] = ( (w_anode3231w[2..2] & (! w_data3016w[2..2])), (w_anode3231w[1..1] & (! w_data3016w[1..1])), (w_anode3231w[0..0] & w_data3016w[0..0]), w_anode3211w[2..2]);
	w_anode3241w[] = ( (w_anode3241w[2..2] & (! w_data3016w[2..2])), (w_anode3241w[1..1] & w_data3016w[1..1]), (w_anode3241w[0..0] & (! w_data3016w[0..0])), w_anode3211w[2..2]);
	w_anode3251w[] = ( (w_anode3251w[2..2] & (! w_data3016w[2..2])), (w_anode3251w[1..1] & w_data3016w[1..1]), (w_anode3251w[0..0] & w_data3016w[0..0]), w_anode3211w[2..2]);
	w_anode3261w[] = ( (w_anode3261w[2..2] & w_data3016w[2..2]), (w_anode3261w[1..1] & (! w_data3016w[1..1])), (w_anode3261w[0..0] & (! w_data3016w[0..0])), w_anode3211w[2..2]);
	w_anode3271w[] = ( (w_anode3271w[2..2] & w_data3016w[2..2]), (w_anode3271w[1..1] & (! w_data3016w[1..1])), (w_anode3271w[0..0] & w_data3016w[0..0]), w_anode3211w[2..2]);
	w_anode3281w[] = ( (w_anode3281w[2..2] & w_data3016w[2..2]), (w_anode3281w[1..1] & w_data3016w[1..1]), (w_anode3281w[0..0] & (! w_data3016w[0..0])), w_anode3211w[2..2]);
	w_anode3291w[] = ( (w_anode3291w[2..2] & w_data3016w[2..2]), (w_anode3291w[1..1] & w_data3016w[1..1]), (w_anode3291w[0..0] & w_data3016w[0..0]), w_anode3211w[2..2]);
	w_anode3302w[] = ( (w_anode3302w[1..1] & data_wire[4..4]), (w_anode3302w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3311w[] = ( (w_anode3311w[2..2] & (! w_data3016w[2..2])), (w_anode3311w[1..1] & (! w_data3016w[1..1])), (w_anode3311w[0..0] & (! w_data3016w[0..0])), w_anode3302w[2..2]);
	w_anode3322w[] = ( (w_anode3322w[2..2] & (! w_data3016w[2..2])), (w_anode3322w[1..1] & (! w_data3016w[1..1])), (w_anode3322w[0..0] & w_data3016w[0..0]), w_anode3302w[2..2]);
	w_anode3332w[] = ( (w_anode3332w[2..2] & (! w_data3016w[2..2])), (w_anode3332w[1..1] & w_data3016w[1..1]), (w_anode3332w[0..0] & (! w_data3016w[0..0])), w_anode3302w[2..2]);
	w_anode3342w[] = ( (w_anode3342w[2..2] & (! w_data3016w[2..2])), (w_anode3342w[1..1] & w_data3016w[1..1]), (w_anode3342w[0..0] & w_data3016w[0..0]), w_anode3302w[2..2]);
	w_anode3352w[] = ( (w_anode3352w[2..2] & w_data3016w[2..2]), (w_anode3352w[1..1] & (! w_data3016w[1..1])), (w_anode3352w[0..0] & (! w_data3016w[0..0])), w_anode3302w[2..2]);
	w_anode3362w[] = ( (w_anode3362w[2..2] & w_data3016w[2..2]), (w_anode3362w[1..1] & (! w_data3016w[1..1])), (w_anode3362w[0..0] & w_data3016w[0..0]), w_anode3302w[2..2]);
	w_anode3372w[] = ( (w_anode3372w[2..2] & w_data3016w[2..2]), (w_anode3372w[1..1] & w_data3016w[1..1]), (w_anode3372w[0..0] & (! w_data3016w[0..0])), w_anode3302w[2..2]);
	w_anode3382w[] = ( (w_anode3382w[2..2] & w_data3016w[2..2]), (w_anode3382w[1..1] & w_data3016w[1..1]), (w_anode3382w[0..0] & w_data3016w[0..0]), w_anode3302w[2..2]);
	w_data3016w[2..0] = data_wire[2..0];
END;
--VALID FILE
