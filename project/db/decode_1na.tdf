--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=28 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 20.1 cbx_cycloneii 2020:11:11:17:06:45:SJ cbx_lpm_add_sub 2020:11:11:17:06:45:SJ cbx_lpm_compare 2020:11:11:17:06:45:SJ cbx_lpm_decode 2020:11:11:17:06:45:SJ cbx_mgl 2020:11:11:17:08:38:SJ cbx_nadder 2020:11:11:17:06:46:SJ cbx_stratix 2020:11:11:17:06:46:SJ cbx_stratixii 2020:11:11:17:06:46:SJ  VERSION_END


-- Copyright (C) 2020  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 36 
SUBDESIGN decode_1na
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[27..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[27..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode3668w[2..0]	: WIRE;
	w_anode3681w[3..0]	: WIRE;
	w_anode3698w[3..0]	: WIRE;
	w_anode3708w[3..0]	: WIRE;
	w_anode3718w[3..0]	: WIRE;
	w_anode3728w[3..0]	: WIRE;
	w_anode3738w[3..0]	: WIRE;
	w_anode3748w[3..0]	: WIRE;
	w_anode3758w[3..0]	: WIRE;
	w_anode3770w[2..0]	: WIRE;
	w_anode3779w[3..0]	: WIRE;
	w_anode3790w[3..0]	: WIRE;
	w_anode3800w[3..0]	: WIRE;
	w_anode3810w[3..0]	: WIRE;
	w_anode3820w[3..0]	: WIRE;
	w_anode3830w[3..0]	: WIRE;
	w_anode3840w[3..0]	: WIRE;
	w_anode3850w[3..0]	: WIRE;
	w_anode3861w[2..0]	: WIRE;
	w_anode3870w[3..0]	: WIRE;
	w_anode3881w[3..0]	: WIRE;
	w_anode3891w[3..0]	: WIRE;
	w_anode3901w[3..0]	: WIRE;
	w_anode3911w[3..0]	: WIRE;
	w_anode3921w[3..0]	: WIRE;
	w_anode3931w[3..0]	: WIRE;
	w_anode3941w[3..0]	: WIRE;
	w_anode3952w[2..0]	: WIRE;
	w_anode3961w[3..0]	: WIRE;
	w_anode3972w[3..0]	: WIRE;
	w_anode3982w[3..0]	: WIRE;
	w_anode3992w[3..0]	: WIRE;
	w_anode4002w[3..0]	: WIRE;
	w_anode4012w[3..0]	: WIRE;
	w_anode4022w[3..0]	: WIRE;
	w_anode4032w[3..0]	: WIRE;
	w_data3666w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[27..0] = eq_wire[27..0];
	eq_wire[] = ( ( w_anode4032w[3..3], w_anode4022w[3..3], w_anode4012w[3..3], w_anode4002w[3..3], w_anode3992w[3..3], w_anode3982w[3..3], w_anode3972w[3..3], w_anode3961w[3..3]), ( w_anode3941w[3..3], w_anode3931w[3..3], w_anode3921w[3..3], w_anode3911w[3..3], w_anode3901w[3..3], w_anode3891w[3..3], w_anode3881w[3..3], w_anode3870w[3..3]), ( w_anode3850w[3..3], w_anode3840w[3..3], w_anode3830w[3..3], w_anode3820w[3..3], w_anode3810w[3..3], w_anode3800w[3..3], w_anode3790w[3..3], w_anode3779w[3..3]), ( w_anode3758w[3..3], w_anode3748w[3..3], w_anode3738w[3..3], w_anode3728w[3..3], w_anode3718w[3..3], w_anode3708w[3..3], w_anode3698w[3..3], w_anode3681w[3..3]));
	w_anode3668w[] = ( (w_anode3668w[1..1] & (! data_wire[4..4])), (w_anode3668w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3681w[] = ( (w_anode3681w[2..2] & (! w_data3666w[2..2])), (w_anode3681w[1..1] & (! w_data3666w[1..1])), (w_anode3681w[0..0] & (! w_data3666w[0..0])), w_anode3668w[2..2]);
	w_anode3698w[] = ( (w_anode3698w[2..2] & (! w_data3666w[2..2])), (w_anode3698w[1..1] & (! w_data3666w[1..1])), (w_anode3698w[0..0] & w_data3666w[0..0]), w_anode3668w[2..2]);
	w_anode3708w[] = ( (w_anode3708w[2..2] & (! w_data3666w[2..2])), (w_anode3708w[1..1] & w_data3666w[1..1]), (w_anode3708w[0..0] & (! w_data3666w[0..0])), w_anode3668w[2..2]);
	w_anode3718w[] = ( (w_anode3718w[2..2] & (! w_data3666w[2..2])), (w_anode3718w[1..1] & w_data3666w[1..1]), (w_anode3718w[0..0] & w_data3666w[0..0]), w_anode3668w[2..2]);
	w_anode3728w[] = ( (w_anode3728w[2..2] & w_data3666w[2..2]), (w_anode3728w[1..1] & (! w_data3666w[1..1])), (w_anode3728w[0..0] & (! w_data3666w[0..0])), w_anode3668w[2..2]);
	w_anode3738w[] = ( (w_anode3738w[2..2] & w_data3666w[2..2]), (w_anode3738w[1..1] & (! w_data3666w[1..1])), (w_anode3738w[0..0] & w_data3666w[0..0]), w_anode3668w[2..2]);
	w_anode3748w[] = ( (w_anode3748w[2..2] & w_data3666w[2..2]), (w_anode3748w[1..1] & w_data3666w[1..1]), (w_anode3748w[0..0] & (! w_data3666w[0..0])), w_anode3668w[2..2]);
	w_anode3758w[] = ( (w_anode3758w[2..2] & w_data3666w[2..2]), (w_anode3758w[1..1] & w_data3666w[1..1]), (w_anode3758w[0..0] & w_data3666w[0..0]), w_anode3668w[2..2]);
	w_anode3770w[] = ( (w_anode3770w[1..1] & (! data_wire[4..4])), (w_anode3770w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3779w[] = ( (w_anode3779w[2..2] & (! w_data3666w[2..2])), (w_anode3779w[1..1] & (! w_data3666w[1..1])), (w_anode3779w[0..0] & (! w_data3666w[0..0])), w_anode3770w[2..2]);
	w_anode3790w[] = ( (w_anode3790w[2..2] & (! w_data3666w[2..2])), (w_anode3790w[1..1] & (! w_data3666w[1..1])), (w_anode3790w[0..0] & w_data3666w[0..0]), w_anode3770w[2..2]);
	w_anode3800w[] = ( (w_anode3800w[2..2] & (! w_data3666w[2..2])), (w_anode3800w[1..1] & w_data3666w[1..1]), (w_anode3800w[0..0] & (! w_data3666w[0..0])), w_anode3770w[2..2]);
	w_anode3810w[] = ( (w_anode3810w[2..2] & (! w_data3666w[2..2])), (w_anode3810w[1..1] & w_data3666w[1..1]), (w_anode3810w[0..0] & w_data3666w[0..0]), w_anode3770w[2..2]);
	w_anode3820w[] = ( (w_anode3820w[2..2] & w_data3666w[2..2]), (w_anode3820w[1..1] & (! w_data3666w[1..1])), (w_anode3820w[0..0] & (! w_data3666w[0..0])), w_anode3770w[2..2]);
	w_anode3830w[] = ( (w_anode3830w[2..2] & w_data3666w[2..2]), (w_anode3830w[1..1] & (! w_data3666w[1..1])), (w_anode3830w[0..0] & w_data3666w[0..0]), w_anode3770w[2..2]);
	w_anode3840w[] = ( (w_anode3840w[2..2] & w_data3666w[2..2]), (w_anode3840w[1..1] & w_data3666w[1..1]), (w_anode3840w[0..0] & (! w_data3666w[0..0])), w_anode3770w[2..2]);
	w_anode3850w[] = ( (w_anode3850w[2..2] & w_data3666w[2..2]), (w_anode3850w[1..1] & w_data3666w[1..1]), (w_anode3850w[0..0] & w_data3666w[0..0]), w_anode3770w[2..2]);
	w_anode3861w[] = ( (w_anode3861w[1..1] & data_wire[4..4]), (w_anode3861w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3870w[] = ( (w_anode3870w[2..2] & (! w_data3666w[2..2])), (w_anode3870w[1..1] & (! w_data3666w[1..1])), (w_anode3870w[0..0] & (! w_data3666w[0..0])), w_anode3861w[2..2]);
	w_anode3881w[] = ( (w_anode3881w[2..2] & (! w_data3666w[2..2])), (w_anode3881w[1..1] & (! w_data3666w[1..1])), (w_anode3881w[0..0] & w_data3666w[0..0]), w_anode3861w[2..2]);
	w_anode3891w[] = ( (w_anode3891w[2..2] & (! w_data3666w[2..2])), (w_anode3891w[1..1] & w_data3666w[1..1]), (w_anode3891w[0..0] & (! w_data3666w[0..0])), w_anode3861w[2..2]);
	w_anode3901w[] = ( (w_anode3901w[2..2] & (! w_data3666w[2..2])), (w_anode3901w[1..1] & w_data3666w[1..1]), (w_anode3901w[0..0] & w_data3666w[0..0]), w_anode3861w[2..2]);
	w_anode3911w[] = ( (w_anode3911w[2..2] & w_data3666w[2..2]), (w_anode3911w[1..1] & (! w_data3666w[1..1])), (w_anode3911w[0..0] & (! w_data3666w[0..0])), w_anode3861w[2..2]);
	w_anode3921w[] = ( (w_anode3921w[2..2] & w_data3666w[2..2]), (w_anode3921w[1..1] & (! w_data3666w[1..1])), (w_anode3921w[0..0] & w_data3666w[0..0]), w_anode3861w[2..2]);
	w_anode3931w[] = ( (w_anode3931w[2..2] & w_data3666w[2..2]), (w_anode3931w[1..1] & w_data3666w[1..1]), (w_anode3931w[0..0] & (! w_data3666w[0..0])), w_anode3861w[2..2]);
	w_anode3941w[] = ( (w_anode3941w[2..2] & w_data3666w[2..2]), (w_anode3941w[1..1] & w_data3666w[1..1]), (w_anode3941w[0..0] & w_data3666w[0..0]), w_anode3861w[2..2]);
	w_anode3952w[] = ( (w_anode3952w[1..1] & data_wire[4..4]), (w_anode3952w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3961w[] = ( (w_anode3961w[2..2] & (! w_data3666w[2..2])), (w_anode3961w[1..1] & (! w_data3666w[1..1])), (w_anode3961w[0..0] & (! w_data3666w[0..0])), w_anode3952w[2..2]);
	w_anode3972w[] = ( (w_anode3972w[2..2] & (! w_data3666w[2..2])), (w_anode3972w[1..1] & (! w_data3666w[1..1])), (w_anode3972w[0..0] & w_data3666w[0..0]), w_anode3952w[2..2]);
	w_anode3982w[] = ( (w_anode3982w[2..2] & (! w_data3666w[2..2])), (w_anode3982w[1..1] & w_data3666w[1..1]), (w_anode3982w[0..0] & (! w_data3666w[0..0])), w_anode3952w[2..2]);
	w_anode3992w[] = ( (w_anode3992w[2..2] & (! w_data3666w[2..2])), (w_anode3992w[1..1] & w_data3666w[1..1]), (w_anode3992w[0..0] & w_data3666w[0..0]), w_anode3952w[2..2]);
	w_anode4002w[] = ( (w_anode4002w[2..2] & w_data3666w[2..2]), (w_anode4002w[1..1] & (! w_data3666w[1..1])), (w_anode4002w[0..0] & (! w_data3666w[0..0])), w_anode3952w[2..2]);
	w_anode4012w[] = ( (w_anode4012w[2..2] & w_data3666w[2..2]), (w_anode4012w[1..1] & (! w_data3666w[1..1])), (w_anode4012w[0..0] & w_data3666w[0..0]), w_anode3952w[2..2]);
	w_anode4022w[] = ( (w_anode4022w[2..2] & w_data3666w[2..2]), (w_anode4022w[1..1] & w_data3666w[1..1]), (w_anode4022w[0..0] & (! w_data3666w[0..0])), w_anode3952w[2..2]);
	w_anode4032w[] = ( (w_anode4032w[2..2] & w_data3666w[2..2]), (w_anode4032w[1..1] & w_data3666w[1..1]), (w_anode4032w[0..0] & w_data3666w[0..0]), w_anode3952w[2..2]);
	w_data3666w[2..0] = data_wire[2..0];
END;
--VALID FILE
